<?php
#**************************************************************************#
#   MolyX2
#   ------------------------------------------------------
#   copyright (c) 2004-2006 HOGE Software.
#   official forum : http://molyx.com
#   license : MolyX License, http://molyx.com/license
#   MolyX2 is free software. You can redistribute this file and/or modify
#   it under the terms of MolyX License. If you do not accept the Terms
#   and Conditions stated in MolyX License, please do not redistribute
#   this file.Please visit http://molyx.com/license periodically to review
#   the Terms and Conditions, or contact HOGE Software.
#**************************************************************************#
error_reporting  (E_ERROR | E_WARNING | E_PARSE);
define( 'ROOT_PATH', './../' );
define('IN_MXB', TRUE);
@set_time_limit(0);
if (function_exists('ini_get')) {
	$safe_mode = @ini_get("safe_mode") ? 1 : 0;
} else {
	$safe_mode = 1;
}
define( 'SAFE_MODE', $safe_mode );

require_once(ROOT_PATH.'install/install_functions.php');
if (!$_GET['lang'] && !$_POST['lang'] && !$_COOKIE['lang']) {
	preg_match('/^([a-z-]+)/i', $_SERVER['HTTP_ACCEPT_LANGUAGE'], $matches);
	$language = $matches[1];
	switch ($language) {
		case 'zh':
		case 'zh-cn':
			$language = 'zh-cn';
			break;
		case 'zh-tw':
		case 'zh-hk':
		case 'zh-mo':
		case 'zh-sg':
			$language = 'zh-tw';
			break;
		default:
			$language = 'en-us';
			break;
	}
	require(ROOT_PATH.'install/install_lang_'.$language.'.php');
	p_header();
	if ($_POST['next']) {
		$error = true;
	}
	p_selectlang($error, $language);
	p_footer('welcome',0,0);
	exit;
}
$_POST['lang'] = $_POST['lang'] ? $_POST['lang'] : $_GET['lang'];
$_GET['lang'] = $_POST['lang'];
require(ROOT_PATH.'install/install_lang_'.$_POST['lang'].'.php');
if (PHP_VERSION < '4.1.0') {
	$_GET = &$HTTP_GET_VARS;
	$_POST = &$HTTP_POST_VARS;
	$_COOKIE = &$HTTP_COOKIE_VARS;
	$_SERVER = &$HTTP_SERVER_VARS;
	$_ENV = &$HTTP_ENV_VARS;
	$_FILES = &$HTTP_POST_FILES;
	$_REQUEST = array_merge($_GET, $_POST, $_COOKIE);
}

if ($_ENV['REQUEST_URI'] OR $_SERVER['REQUEST_URI']) {
	$scriptpath = $_SERVER['REQUEST_URI'] ? $_SERVER['REQUEST_URI'] : $_ENV['REQUEST_URI'];
} else {
	if ($_ENV['PATH_INFO'] OR $_SERVER['PATH_INFO']) {
		$scriptpath = $_SERVER['PATH_INFO'] ? $_SERVER['PATH_INFO']: $_ENV['PATH_INFO'];
	} else if ($_ENV['REDIRECT_URL'] OR $_SERVER['REDIRECT_URL']) {
		$scriptpath = $_SERVER['REDIRECT_URL'] ? $_SERVER['REDIRECT_URL']: $_ENV['REDIRECT_URL'];
	} else {
		$scriptpath = $_SERVER['PHP_SELF'] ? $_SERVER['PHP_SELF'] : $_ENV['PHP_SELF'];
	}

	if ($_ENV['QUERY_STRING'] OR $_SERVER['QUERY_STRING']) {
		$scriptpath .= '?' . ($_SERVER['QUERY_STRING'] ? $_SERVER['QUERY_STRING'] : $_ENV['QUERY_STRING']);
	}
}
define('SCRIPTPATH', $scriptpath);
function check_php_version ($version)
{
	$testSplit = explode ('.', $version);
	$currentSplit = explode ('.', phpversion ());
	if( $testSplit[0] < $currentSplit[0] ) {
		return true;
	}
	if( $testSplit[0] == $currentSplit[0] ) {
		if( $testSplit[1] < $currentSplit[1] ) {
			return true;
		}
		if( $testSplit[1] == $currentSplit[1] ) {
			if( $testSplit[2] <= $currentSplit[2] ) {
				return true;
			}
		}
	}
	return false;
}


if( !check_php_version('4.0.6') ) {
	p_errormsg(lng('error'), lng('versiontoolow'));
}

if( !isset($action) ) {
	$action = '';
}
if( !install_allowed() && $action != '' ) {
	$action = 'deny';
}
switch( $action ) {
	case 'generate_config':
		header('Content-Type: text/octetstream');
		header('Content-Disposition: attachment; filename="config.php"');
		header('Pragma: no-cache');
		header('Expires: ' . gmdate('D, d M Y H:i:s') . ' GMT');

		print '<?php
/* This file has been generated by the install script. You
need to upload it into your includes/ directory! */
$config[\'servername\'] = "'.$hostname.'";
$config[\'dbname\'] = "'.$db.'";
$config[\'dbusername\'] = "'.$user.'";
$config[\'dbpassword\'] = "'.$pass.'";
$config[\'tableprefix\'] = "'.$prefix.'";
$config[\'usepconnect\'] = "'.$usepconnect.'";
$config[\'superadmin\'] = "'.$superadmin.'";
$config[\'technicalemail\'] = "'.$technicalemail.'";
$config[\'dbtype\'] = "'.$dbtype.'";
$config[\'dbcharset\'] = "'.$dbcharset.'";
$config[\'forumurl\'] = "'.$forum_url.'";
$config[\'remoteattach\'] = "";
?>';
		break;

	case 'createadmin':
		if( strlen($admin_pass) < 5 ) {
			p_errormsg(lng('error'), lng('adminpwtooshort'));
		}
		if( $admin_pass != $twopassword ) {
			p_errormsg(lng('error'), lng('passwordnowmatch'));
		}
		define('DB_EXPLAIN', false);
		define('DB_QUERIES', false);
		define('TABLE_PREFIX', $prefix);

		$dbtype = ($dbtype) ? trim($dbtype) : 'mysql';
		include_once ( ROOT_PATH.'includes/db/db_'.$dbtype.'.php' );
		$DB = new db;
		$DB->server = $hostname;
		$DB->database = $db;
		$DB->user = $user;
		$DB->password = $pass;
		$DB->pconnect = $usepconnect;
		$DB->dbcharset = $dbcharset;
		$DB->connect();
		include_once ( ROOT_PATH.'includes/functions.php' );
		$forums->func = new functions();
		$forums->func->check_lang();

		$salt = generate_user_salt();

		$DB->query_unbuffered("INSERT INTO ".$prefix."user (name, email, password, usergroupid, joindate, timezoneoffset, options, salt) VALUES
			('$admin_user', '$admin_email', '".md5(md5($admin_pass).$salt)."', 4, ".time().", 8, 103, '".addslashes($salt)."')");
		$adminid = $DB->insert_id();

		include_once ( ROOT_PATH.'includes/adminfunctions_cache.php' );
		$cache = new adminfunctions_cache();
		$cache->all_recache();

		$technicalemail = $emailreceived ? $emailreceived : $admin_email;

		p_header();
		p_prewrite($hostname, $user, $pass, $db, $prefix, $usepconnect, $adminid, $emailreceived);
		p_footer('writeconfig', array(
			'hostname' => $hostname,
			'user' => $user,
			'pass' => $pass,
			'db' => $db,
			'superadmin' => $adminid,
			'prefix' => $prefix,
			'usepconnect' => $usepconnect,
			'technicalemail' => $technicalemail,
			'dbtype' => $dbtype,
			'dbcharset' => $dbcharset,
			'forum_url' => $forum_url,
		));
		break;

	case 'sitesetting':

		mysql_connect($hostname, $user, $pass);
		if ($dbcharset) {
			mysql_query("SET NAMES ".$dbcharset);
		}
		mysql_select_db($db);


		$uploadurl = $bburl.'/data/uploads';
		$uploadfolder = str_replace("\\", "/", realpath(ROOT_PATH) . "/data/uploads");
		mxb_query("UPDATE ".$prefix."setting SET defaultvalue='".$hometitle."' WHERE varname='hometitle'");
		mxb_query("UPDATE ".$prefix."setting SET defaultvalue='".$homeurl."' WHERE varname='homeurl'");
		mxb_query("UPDATE ".$prefix."setting SET defaultvalue='".$bbtitle."' WHERE varname='bbtitle'");
		mxb_query("UPDATE ".$prefix."setting SET defaultvalue='".$bburl."' WHERE varname='bburl'");
		mxb_query("UPDATE ".$prefix."setting SET defaultvalue='".$uploadurl."' WHERE varname='uploadurl'");
		mxb_query("UPDATE ".$prefix."setting SET defaultvalue='".$uploadfolder."' WHERE varname='uploadfolder'");
		mxb_query("UPDATE ".$prefix."setting SET defaultvalue='".$emailreceived."' WHERE varname='emailreceived'");
		mxb_query("UPDATE ".$prefix."setting SET defaultvalue='".$emailsend."' WHERE varname='emailsend'");
		mxb_query("UPDATE ".$prefix."setting SET value='".$cookiedomain."' WHERE varname='cookiedomain'");
		mxb_query("UPDATE ".$prefix."setting SET value='".$cookieprefix."' WHERE varname='cookieprefix'");
		mxb_query("UPDATE ".$prefix."setting SET value='".$cookiepath."' WHERE varname='cookiepath'");

		p_header();
		p_adminprofile();
		p_footer('createadmin', array(
			'hostname' => $hostname,
			'user' => $user,
			'pass' => $pass,
			'db' => $db,
			'prefix' => $prefix,
			'usepconnect' => $usepconnect,
			'technicalemail' => $emailreceived,
			'dbtype' => $dbtype,
			'dbcharset' => $dbcharset,
			'forum_url' => $bburl,
		));
		break;

	case 'importstyles':

		p_header();
		define('DB_EXPLAIN', false);
		define('DB_QUERIES', false);
		define('TABLE_PREFIX', $prefix);

		$dbtype = ($dbtype) ? trim($dbtype) : 'mysql';
		include_once ( ROOT_PATH.'includes/db/db_'.$dbtype.'.php' );
		$DB = new db;
		$DB->server = $hostname;
		$DB->database = $db;
		$DB->user = $user;
		$DB->password = $pass;
		$DB->pconnect = $usepconnect;
		$DB->dbcharset = $dbcharset;
		$DB->connect();
		include_once ( ROOT_PATH.'includes/functions.php' );
		$forums->func = new functions();
		include_once ( ROOT_PATH.'includes/adminfunctions_template.php' );
		$dotemplates = new adminfunctions_template();

		$xml = @file_get_contents(ROOT_PATH.'install/MolyX-style.xml');

		$dotemplates->intemplate = 0;
		$counter = 0;
		$dotemplates->curtag = '';
		$arr = array();
		$dotemplates->parser = xml_parser_create();
		xml_parser_set_option($dotemplates->parser, XML_OPTION_CASE_FOLDING, 0);
		xml_set_object($dotemplates->parser, $dotemplates);
		xml_set_element_handler($dotemplates->parser, 'parse_style_otag', 'parse_style_ctag');
		xml_set_character_data_handler($dotemplates->parser, 'parse_style_cdata');
		if (!@xml_parse($dotemplates->parser, $xml)) {
			p_errormsg(lng('error'),lng('xmlparseerror').": ".xml_error_string(xml_get_error_code($dotemplates->parser))." ".lng('atlines')." ".xml_get_current_line_number($dotemplates->parser)."");
		}
		xml_parser_free($dotemplates->parser);
		if (empty($arr)) {
			p_errormsg(lng('error'), lng('styleerror'));
		}
		$version = $dotemplates->style_version;
		$master = $dotemplates->style_master;
		$title = $dotemplates->style_title;
		$querybits = array();
		$querytemplates = 0;
		$stylebits['css'] = '';
		foreach($arr AS $type) {
			foreach($type AS $title => $template) {
				$title = addslashes($title);
				$template['template'] = addslashes($template['template']);
				if ($template['templatetype'] == 'css') {
					$ttttemplates = unserialize(stripslashes($template['template']));
					$stylebits['css'] .= $title." {";
					foreach ($ttttemplates AS $key => $value) {
						$stylebits['css'] .= $key.':'.$value.';';
					}
					$stylebits['css'] .= " }\n";
					continue;
				} elseif ($template['templatetype'] == 'stylevars') {
					$stylebits[$title] = $template['template'];
					continue;
				} else {
					$DB->query_unbuffered("DELETE FROM " . TABLE_PREFIX . "template WHERE styleid=1 AND title='{$title}'");
					$querybits[] = "(1, '$title', '$template[template]', '$template[templategroup]')";
				}
				if (++$querytemplates % 20 == 0) {
					$DB->query_unbuffered("
						REPLACE INTO ".$prefix."template
						(styleid, title, template, templategroup)
						VALUES
						" . implode(',', $querybits) . "
					");
					$querybits = array();
				}
			}
		}
		if (!empty($querybits)) {
			$DB->query_unbuffered("
				REPLACE INTO ".$prefix."template
				(styleid, title, template, templategroup)
				VALUES
				" . implode(',', $querybits) . "
			");
		}
		unset($querybits);
		$stylebits['css'] = str_replace( array('<', '>'), array('&lt;', '&gt;'), $stylebits['css'] );

		$DB->query_unbuffered("
				REPLACE INTO ".$prefix."style
				(styleid, title, imagefolder, userselect, usedefault, csstype, parentid, parentlist, css, csscache, version)
				VALUES
				('1', 'Global Style', '".$stylebits['imagefolder']."', 0, 0, 0, 0, 1, '".$stylebits['css']."', '', '".$version."')
			");
		$DB->query_unbuffered("
				REPLACE INTO ".$prefix."style
				(title, imagefolder, userselect, usedefault, csstype, parentid, parentlist, css, csscache, version)
				VALUES
				('".lng('defaultstyle')."', '".$stylebits['imagefolder']."', 1, 1, 1, 1, 1, '', '', '".$version."')
			");
		$styleid = $DB->insert_id();
		$parentlist = $styleid.',1';
		$DB->query_unbuffered("UPDATE ".$prefix."style SET parentlist='".$parentlist."' WHERE styleid = $styleid");
		$dotemplates->rebuildallcaches( array( $styleid ) );

		p_settingsite();
		p_footer('sitesetting', array(
			'hostname' => $hostname,
			'user' => $user,
			'pass' => $pass,
			'db' => $db,
			'prefix' => $prefix,
			'usepconnect' => $usepconnect,
			'dbtype' => $dbtype,
			'dbcharset' => $dbcharset,
		));
		break;

	case 'createtables':
		mysql_connect($hostname, $user, $pass);
		if ($dbcharset) {
			mysql_query("SET NAMES ".$dbcharset);
		}
		mysql_select_db($db);

		create_tables($delete_existing);

		p_header();
		p_importstyles();
		p_footer('importstyles', array(
			'hostname' => $hostname,
			'user' => $user,
			'pass' => $pass,
			'db' => $db,
			'prefix' => $prefix,
			'usepconnect' => $usepconnect,
			'dbtype' => $dbtype,
			'dbcharset' => $dbcharset,
		));
		break;

	case 'writeconfig':
		if( !WriteAccess(ROOT_PATH.'includes/config.php') )
		{
			p_errormsg(lng('error'), lng('chmoderror'));
		}
		else
		{
			$fp = @fopen(ROOT_PATH.'includes/config.php', 'wb');
			fwrite($fp, '<?php
$config[\'servername\'] = "'.$hostname.'";
$config[\'dbname\'] = "'.$db.'";
$config[\'dbusername\'] = "'.$user.'";
$config[\'dbpassword\'] = "'.$pass.'";
$config[\'tableprefix\'] = "'.$prefix.'";
$config[\'usepconnect\'] = "'.$usepconnect.'";
$config[\'superadmin\'] = "'.$superadmin.'";
$config[\'technicalemail\'] = "'.$technicalemail.'";
$config[\'dbtype\'] = "'.$dbtype.'";
$config[\'dbcharset\'] = "'.$dbcharset.'";
$config[\'forumurl\'] = "'.$forum_url.'";
$config[\'remoteattach\'] = "";
?>');
			fclose($fp);

			$finished = p_done();
			p_header();
			echo $finished;
			p_footer();
		}
		break;

	case 'setprefix':
		mysql_connect($hostname, $user, $pass);

		$db = '';
		if( $name_db && $selected_db == '_usefield' ) {
			$db = $name_db;
		} else {
			$db = $selected_db;
		}

		if( !db_exists($db) ) {
			mxb_query("CREATE DATABASE ".$db);
			if( !db_exists($db) ) {
				p_errormsg(lng('error'), sprintf(lng('mysqlerror'), $db, mysql_error()));
			}
		}

		mysql_select_db($db);

		$tables = array();
		$r_table = mysql_query("SHOW TABLES FROM ".$db);
		while($row = @mysql_fetch_array($r_table, MYSQL_NUM)) {
			$tables[] = $row[0];
		}

		p_header();
		p_chooseprefix($db, $tables, $tableprefix);
		p_footer('createtables', array(
			'hostname' => $hostname,
			'user' => $user,
			'pass' => $pass,
			'db' => $db,
			'usepconnect' => $usepconnect,
			'dbtype' => $dbtype,
			'dbcharset' => $dbcharset,
		));
		break;

	case 'selectdb':
		$dbhandle = @mysql_connect($hostname, $user, $pass);
		if( !$dbhandle )
		{
			p_errormsg(lng('error'), sprintf(lng('connecterror'), mysql_error()));
		}
		$versions = mysql_query("SELECT VERSION() AS version");
		$version = mysql_fetch_array($versions);

		$vars = mysql_query("SHOW VARIABLES");
		while ($row = mysql_fetch_array($vars)) {
			$var[$row[0]] = $row[1];
		}

		if ($version['version'] >= '4.1') {
			if ($var['character_set_client'] != "utf8" OR $var['character_set_database'] != "utf8") {
				$dbcharset = 'utf8';
			}
		}

		$r_database = @mysql_list_dbs();

		$databases = '';
		$i = 0;
		$selected = '';
		while( $i < @mysql_num_rows($r_database) )
		{
			$dbs = mysql_tablename($r_database, $i);
			if (trim($dbname) == $dbs) {
				$selected = 'selected="selected"';
			}
			$databases .= '<option value="'.$dbs.'" '.$selected.'>'.lng('existingdb').': '.$dbs.'</option>';
			$i++;
			$selected = '';
		}

		p_header();
		p_selectdb($databases);
		p_footer('setprefix', array(
			'hostname' => $hostname,
			'user' => $user,
			'pass' => $pass,
			'tableprefix' => $tableprefix,
			'usepconnect' => $usepconnect,
			'dbtype' => $dbtype,
			'dbcharset' => $dbcharset,
		));
		break;

	case 'mysqldata':
		p_header();
		p_mysqldata();
		p_footer('selectdb');
		break;

	case 'license':
		p_header();
		p_license();
		p_footer('diraccess');
		break;

	case 'diraccess':
		if( $accept != 'yes' ) {
			p_errormsg(lng('error'), lng('licaccept'));
		} else {
			p_header();
			p_diraccess();
			break;
		}

	case 'deny':
		p_header();
		p_deny_install();
		p_footer();
		break;

	case 'welcome':
		p_header();
		p_welcome();
		p_footer('license');
		break;

	default:
		p_header();
		p_selectlang();
		p_footer('welcome',0,0);
		break;

}
?>
